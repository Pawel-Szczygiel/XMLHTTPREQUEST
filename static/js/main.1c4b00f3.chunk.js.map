{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","users","xhr","XMLHttpRequest","open","onload","status","JSON","parse","response","setState","send","this","map","user","name","address","city","id","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA8CeA,E,4MAzCbC,MAAQ,CACNC,MAAO,I,uDAGT,WAAqB,IAAD,OACZC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAO,8CAA8C,GAC9DF,EAAIG,OAAS,WAEX,GAAkB,MAAfH,EAAII,OAAgB,CACnB,IAAML,EAAQM,KAAKC,MAAMN,EAAIO,UAE7B,EAAKC,SAAS,CACZT,YAIPC,EAAIS,KAAK,Q,oBAKZ,WAEI,IAAMV,EAAQW,KAAKZ,MAAMC,MAAMY,KAAI,SAAAC,GAAI,OACnC,gCACI,6BAAKA,EAAKC,OACV,4BAAID,EAAKE,QAAQC,SAFXH,EAAKI,OAOrB,OACE,8BACGjB,Q,GApCSkB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c4b00f3.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    users: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', 'https://jsonplaceholder.typicode.com/users', true) //3 arg asynhroniczne\r\n    xhr.onload = () => {\r\n      // console.log(xhr.status);\r\n      if(xhr.status === 200) {\r\n          const users = JSON.parse(xhr.response);\r\n        \r\n          this.setState({\r\n            users\r\n          })\r\n      }\r\n   }\r\n     xhr.send(null) \r\n  }\r\n\r\n  \r\n\r\n  render(){\r\n\r\n      const users = this.state.users.map(user => (\r\n          <div key={user.id}>\r\n              <h4>{user.name}</h4>\r\n              <p>{user.address.city}</p>\r\n          </div>\r\n\r\n      ))\r\n\r\n    return (\r\n      <div>\r\n        {users}\r\n      </div>\r\n  );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}